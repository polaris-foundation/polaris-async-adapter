[tox]
skipsdist = true
envlist = lint,py39
source_package = dhos_async_adapter
all_sources = {[tox]source_package} tests/ integration-tests/

[flake8]
max-line-length = 100

[testenv]
envdir = {toxworkdir}/py39

setenv = ENVIRONMENT = DEVELOPMENT
         RABBITMQ_HOST=localhost
         RABBITMQ_USERNAME=guest
         RABBITMQ_PASSWORD=guest
         LOG_LEVEL = DEBUG
         LOG_FORMAT = COLOUR
         PROXY_URL=http://localhost
         HS_KEY=secret
         CUSTOMER_CODE=dev
         SMS_DEFAULT_SENDER=GDm-Health
         DEA_AUTH0_CLIENT_ID=something
         DEA_AUTH0_CLIENT_SECRET=something
         DEA_AUTH0_AUDIENCE=something
         DEA_AUTH0_TOKEN_URL=http://dea-auth0-token
         DEA_INGEST_API_URL=http://dea-ingest
         DHOS_ACTIVATION_AUTH_API_URL=http://dhos-activation-auth
         DHOS_AGGREGATOR_API_URL=http://dhos-aggregator
         DHOS_AUDIT_API_URL=http://dhos-audit
         DHOS_CONNECTOR_API_URL=http://dhos-connector
         DHOS_ENCOUNTERS_API_URL=http://dhos-encounters
         DHOS_LOCATIONS_API_URL=http://dhos-locations
         DHOS_MESSAGES_API_URL=http://dhos-messages
         DHOS_NOTIFICATIONS_API_URL=http://dhos-notifications
         DHOS_OBSERVATIONS_API_URL=http://dhos-observations
         DHOS_PDF_API_URL=http://dhos-pdf
         DHOS_QUESTIONS_API_URL=http://dhos-questions
         DHOS_SERVICES_API_URL=http://dhos-services
         DHOS_USERS_API_URL=http://dhos-users
         DHOS_SMS_API_URL=http://dhos-sms
         GDM_BG_READINGS_API_URL=http://gdm-bg-readings

commands = pip install --upgrade pip
           poetry install -v
           black --check {[tox]source_package} tests/
           isort --profile black {[tox]source_package} tests/ --check-only
           mypy {[tox]source_package}
           bandit -r {[tox]source_package} -lll
           safety check
           coverage run --source {[tox]source_package} -m py.test {posargs}
           coverage report
           coverage xml -i -o coverage-reports/coverage.xml
allowlist_externals =
        bandit
        bash
        black
        coverage
        isort
        mypy
        poetry
        python
        safety
        true
list_dependencies_command = true

[testenv:lint]
description = Run black, isort, and mypy to clean up source files
commands =
       black {[tox]all_sources}
       isort --profile black {[tox]all_sources}
       mypy {[tox]source_package} tests/

[testenv:debug]
description = Run last failing unit test and invoke debugger on errors
commands =
    pytest --lf --pdb

[testenv:update]
description = Update poetry lock files
commands = poetry update
